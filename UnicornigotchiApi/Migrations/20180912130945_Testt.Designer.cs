// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnicornigotchiApi.DataModel;

namespace UnicornigotchiApi.Migrations
{
    [DbContext(typeof(mobileRemoteDbContext))]
    [Migration("20180912130945_Testt")]
    partial class Testt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.hibernate_sequence", "'hibernate_sequence', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UnicornigotchiApi.DataModel.Blueprints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("FishingShack")
                        .HasColumnName("fishingShack");

                    b.Property<bool?>("Running")
                        .HasColumnName("running");

                    b.HasKey("Id");

                    b.ToTable("Blueprints");
                });

            modelBuilder.Entity("UnicornigotchiApi.DataModel.Care", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("STRINGG")
                        .HasColumnName("STRINGG");

                    b.HasKey("Id");

                    b.ToTable("Care");
                });

            modelBuilder.Entity("UnicornigotchiApi.DataModel.Farm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BlueprintsId")
                        .HasColumnName("blueprintsId");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintsId");

                    b.ToTable("Farm");
                });

            modelBuilder.Entity("UnicornigotchiApi.DataModel.Unicorn", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("decimal(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CareId")
                        .HasColumnName("careId");

                    b.Property<int?>("FarmId")
                        .HasColumnName("farmId");

                    b.Property<string>("FirstName")
                        .HasColumnName("firstName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnName("lastName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ThirdName")
                        .HasColumnName("thirdName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CareId")
                        .IsUnique()
                        .HasFilter("[careId] IS NOT NULL");

                    b.ToTable("Unicorn");
                });

            modelBuilder.Entity("UnicornigotchiApi.DataModel.Farm", b =>
                {
                    b.HasOne("UnicornigotchiApi.DataModel.Blueprints", "Blueprints")
                        .WithMany("Farm")
                        .HasForeignKey("BlueprintsId")
                        .HasConstraintName("blueprints_fk");
                });

            modelBuilder.Entity("UnicornigotchiApi.DataModel.Unicorn", b =>
                {
                    b.HasOne("UnicornigotchiApi.DataModel.Care", "Care")
                        .WithOne("Unicorn")
                        .HasForeignKey("UnicornigotchiApi.DataModel.Unicorn", "CareId");
                });
#pragma warning restore 612, 618
        }
    }
}
